---
title: Architecture Rules
description: Core architectural principles and technical decisions
author: Development Team
created: 2024-02-01
updated: 2024-02-01
version: 2.1.0
tags: [architecture, mlops, cpu-only]
---

### Component Relationships

```mermaid
graph LR
A[Training Data] --> B[MLflow]
B --> C[(Model Registry)]
C --> D[Prediction Service]
```

## Data Flow

1. **Input Handling**:
   - Type conversion guards (numeric fields)
   - Always get input data from [create_evaluation_set.py](mdc:utils/create_evaluation_set.py)
2. **Logging**:
    - **Always** use Experimentlogger from [logger.py](mdc:utils/logger.py)

3. **Output Generation**:
   - Dual threshold validation (0.3-0.65 range)
   - Probability scores with model agreement tracking

4. **Error Handling**:
   - Column presence validation
   - Temp directory write checks

## Technical Decisions

### Technology Choices

**Core ML Stack:**
| Component       | Choice                | Rationale                          |
|-----------------|-----------------------|-------------------------------------|
| ML Framework    | XGBoost/CatBoost      | Handle imbalanced data effectively |
| Tracking        | MLflow                | Model versioning & reproducibility|
| Tuning         | Optuna                | Efficient hyperparameter search    |
| Feature Engine | Custom Pandas-based   | League-specific adaptations        |

**Key Configurations:**
- CPU-only training enforced via XGBoost `tree_method=hist`
- Early stopping rounds: 300-500 depending on dataset size
- Column subsampling range: 0.6-1.0

### Design Patterns

2. **Model Factory**
   - **Use Case**: Dynamic ensemble construction
   - **Implementation**: UUID-based model selection

3. **Feature Selector**
   - **Use Case**: Dimensionality reduction
   - **Implementation**: XGBoost multi-metric importance
   - **Always** import selected features for model training from [create_evaluation_set.py](mdc:utils/create_evaluation_set.py)

### Performance Considerations

**Optimization Techniques:**
- Batch prediction mode for >1000 fixtures
- Column pruning pre-prediction

**Resource Management:**
- Temp directory cleanup after MLflow logging
- Model serialization with protocol=4
- CPU pinning for Optuna trials